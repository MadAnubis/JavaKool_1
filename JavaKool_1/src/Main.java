
public class Main {
	
	private static String input() {
		String test_matrix =	
				"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
				"X2X612X3681448X6X4X815X583X2X3X\n" +
				"X7X3XXXXXXX3X8X7X1X7X7X4X3X2X9X\n" +
				"X626X9X27462X858X8X8X658X9X397X\n" +
				"X5XXX6X6X4XXX4X1X1XXX5X2X2X1XXX\n" +
				"X4X52113X3X392X3X8X981XBX23335X\n" +
				"X3X2XXX5XXX2X7XXX8XXX1XXXXX5X5X\n" +
				"X9X1X4X6X3X8X4354781X836X9X6X2X\n" +
				"X6X4X1X1X9XXX5XXX1XXXXX9X2XXX7X\n" +
				"X8X1X3X9X412X761X968X15396X2X1X\n" +
				"X1X1X7X7X9XXXXXXXXX6X1XXXXX1X4X\n" +
				"X546X7X747X7X786X1X76475X1X313X\n" +
				"X5XXX9X2XXX1XXX7X9XXXXXXX5X8XXX\n" +
				"X415X1X2344654X64944X1X3538812X\n" +
				"X7X5X9X1XXX6XXXXXXX3X5XXXXX8XXX\n" +
				"X8X76623X3X1X73227X9X374839286X\n" +
				"X3X9X9XXX4X1X3XXX2X8X5XXXXXXXXX\n" +
				"X2X3X314X7X91845X837X5X4X22373X\n" +
				"X5XXXXXXX1XXXXXXXXX7X7X3X8X3X6X\n" +
				"X8X994X312X8X1X1X524X71116X9X8X\n" +
				"X4XXX1X9XXX4X7X5X1X5X7XXXXXXX9X\n" +
				"X128977734667991X3X663X4X8X9X5X\n" +
				"X7XXXXX6X6XXX1X9X1X1XXX3X3X1X9X\n" +
				"X81284X5X9X1X2X5X9X8X95412X298X\n" +
				"X6XXXXX2XXX7X9XXX9X6X5XXXXX6XXX\n" +
				"X71591X22725257467X1X621X6X3X5X\n" +
				"X2XXX3XXX1XXX5XXX8X3X9XXX3X7X3X\n" +
				"X8X1XFX2X9X6X282X9X29756525422X\n" +
				"X9X3XXX2XXX7X3X9XXX4X9X4X6X6X2X\n" +
				"X892X818419112X472X7X3X1X1X4X7X\n" +
				"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" ;
		
		return test_matrix;
	}

	private static String input2() {
		String test_matrix = 
				"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
				"X1X111X1111111X1X1X111X111X1X1X\n" +
				"X1X1XXXXXXX1X1X1X1X1X1X1X1X1X1X\n" +
				"X111X1X11111X111X1X1X111X1X111X\n" +
				"X1XXX1X1X1XXX1X1X1XXX1X1X1X1XXX\n" +
				"X1X11111X1X111X1X1X111XBX11111X\n" +
				"X1X1XXX1XXX1X1XXX1XXX1XXXXX1X1X\n" +
				"X1X1X1X1X1X1X1111111X111X1X1X1X\n" +
				"X1X1X1X1X1XXX1XXX1XXXXX1X1XXX1X\n" +
				"X1X1X1X1X111X111X111X11111X1X1X\n" +
				"X1X1X1X1X1XXXXXXXXX1X1XXXXX1X1X\n" +
				"X111X1X111X1X111X1X11111X1X111X\n" +
				"X1XXX1X1XXX1XXX1X1XXXXXXX1X1XXX\n" +
				"X111X1X1111111X11111X1X1111111X\n" +
				"X1X1X1X1XXX1XXXXXXX1X1XXXXX1XXX\n" +
				"X1X11111X1X1X11111X1X111111111X\n" +
				"X1X1X1XXX1X1X1XXX1X1X1XXXXXXXXX\n" +
				"X1X1X111X1X11111X111X1X1X11111X\n" +
				"X1XXXXXXX1XXXXXXXXX1X1X1X1X1X1X\n" +
				"X1X111X111X1X1X1X111X11111X1X1X\n" +
				"X1XXX1X1XXX1X1X1X1X1X1XXXXXXX1X\n" +
				"X111111111111111X1X111X1X1X1X1X\n" +
				"X1XXXXX1X1XXX1X1X1X1XXX1X1X1X1X\n" +
				"X11111X1X1X1X1X1X1X1X11111X111X\n" +
				"X1XXXXX1XXX1X1XXX1X1X1XXXXX1XXX\n" +
				"X11111X11111111111X1X111X1X1X1X\n" +
				"X1XXX1XXX1XXX1XXX1X1X1XXX1X1X1X\n" +
				"X1X1XFX1X1X1X111X1X11111111111X\n" +
				"X1X1XXX1XXX1X1X1XXX1X1X1X1X1X1X\n" +
				"X111X111111111X111X1X1X1X1X1X1X\n" +
				"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n";
		
		return test_matrix;
	}

	public static void main(String[] args) {
		FindPath test = new FindPath();
		
		System.out.print("Start: \n" + test.calculatePath(input(), 31));
	}

}
